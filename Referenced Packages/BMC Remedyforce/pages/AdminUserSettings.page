<apex:page controller="BMCServiceDesk.AdminUserSettingsController" showheader="false" sidebar="false" standardStylesheets="false" > 
    <link rel="stylesheet" type="text/css" href="{!$Resource.ExtJS4_1_3}/resources/css/ext-all.css" id="ext-all-css"/>
    <link rel="stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/AdminUserSettings.css"/>
    <link rel="Stylesheet" type="text/css" href="{!$Resource.SDEFStyles}/HelpStyles.css" />
    <div id="adminUserSettingDiv"></div>	
	<apex:outputPanel id="successId">
		<script>
			function chkIfBatchJobALreadyRunning(){
		        showMessage('{!batchJobStatusMessage}');
		        var btn = Ext.getCmp('rolePopulationBtn');
		        if(btn != null){
		            btn.disabled = false;
		        }
		        waitMsg.hide();  
		    }
		</script>
	</apex:outputPanel>	
	<apex:outputPanel id="setAccountValue">
	    <script>
	    var accountLookupValue = Ext.getCmp('AccountLookupId');
	    if(accountLookupValue!=null && accountLookupValue!='undefined'){
	        accountLookupValue.setValue('{!selectedAccountName}');
	    }
	    </script>
	</apex:outputPanel>
	<apex:form >
		<apex:actionFunction name="populateRoleHierarchy" action="{!populateRoleHierarchy}" onComplete="chkIfBatchJobALreadyRunning();" reRender="successId"/>
		<apex:actionFunction name="deleteClientImport" action="{!deleteClientImport}" onComplete="chkIfBatchJobALreadyRunning();" reRender="successId"/>
		<apex:actionFunction name="getAccountName" action="{!getAccountName}" onComplete="" reRender="setAccountValue">
			<apex:param assignTo="{!assignAccountId}" name="clientAccountid" value=""/>
		</apex:actionFunction>	
		<apex:actionFunction name="savemodifiedData" action="{!SaveNewSettings}" onComplete="waitMsg.hide(); var errormsg = '{!JSENCODE(messageString)}';if(errormsg==''){showMessage('{!JSENCODE($Label.bmcservicedesk__SavedSuccessfully)}'); }else{ showMessage(errormsg); } " reRender="successId">
			<apex:param assignTo="{!FormDataString}" name="FormDataString" value=""/>
			<apex:param assignTo="{!selectedProfileValue}" name="selectedProfileValue" value=""/>
			<apex:param assignTo="{!strImportSettingFields}" name="importSettingFields" value=""/>
		</apex:actionFunction>
	</apex:form>
	<script>
		var classForCheckbox = 'checkboxClass';
		var includeLeadforclient = false,userSegrChk=false;
		var includeContactforclient = false;
		var userSettingStore = {!store};
		
		var existingClientProfile = "{!JSENCODE(selectedProfileValue)}";
		var defaultImportProfileValue = '{!JSENCODE(ImportProfileValue)}';
		var TimezoneValue = '{!JSENCODE(TimezoneValue)}';
	    var LocaleValue = '{!JSENCODE(LocaleValue)}';
	    var LanguageValue = '{!JSENCODE(LanguageValue)}';
	    var EmailEncodingValue = '{!JSENCODE(EmailEncodingValue)}';
	    var tabOutImg = "{!$Resource.SDEFExtJS}/resources/images/default/shared/blue-loading.gif";
	    var saveLbl = '{!JSENCODE($Label.Save)}';
	    var ProfileDesc = new Ext.form.Label({id:'ProfileDesc', text:'{!JSENCODE($Label.DefaultClientProfile)}', cls: 'clsLabel'});
		var clientUserInclude = '{!JSENCODE($Label.Client_Users_Include)}';
		var lblUser = '{!LabelUser}';
		var lblContact = '{!LabelContact}';
		var lblLead = '{!LabelLead}';
		var flgLead = '{!Leadflag}';
		var lblConfigurationSegregation = '{!JSENCODE($Label.ConfigurationSegregation)}';
		var lblPopulateRoleHierarchyData = '{!JSENCODE($Label.PopulateRoleHierarchyData)}';
		var lblSegregateUsers = '{!JSENCODE($Label.SegregateUsers)}';
		var lblDelete = '{!JSENCODE($Label.Delete)}';	
		var lbltooltipDeleteImportSetting = '{!JSENCODE($Label.tooltipDeleteImportSetting)}';
		var lblDomainNameValue = '{!JSENCODE(DomainNameValue)}';
		var ImportDefaultsLabel = new Ext.form.Label({id: 'ImportDefaultsId',text: '{!JSENCODE($Label.ImportDefaults)}', cls: 'clsInputBoldLabelTDI'});
		var DefaultClientAccountLabel = new Ext.form.Label({id: 'DefaultClientAccountLabel',text: '{!JSENCODE($Label.DefaultClientAccount)}', cls: 'clsLabel'});
		var DefaultClientProfileLabel = new Ext.form.Label({id: 'DefaultClientProfileLabel',text: '{!JSENCODE($Label.DefaultClientProfile)}', cls: 'clsLabel'});
		var DomainNameLabel = new Ext.form.Label({id: 'DomainNameLabel',text: '{!JSENCODE($Label.DomainName)}', cls: 'clsLabel'});
		var DomainNameHelpText = new Ext.form.Label({id: 'DomainNameHelpTextLabel',text: '{!JSENCODE($Label.DomainNameHelpText)}', cls: 'EmailAdddressHelpTextCls'});
		var Timezonelbl = new Ext.form.Label({id: 'Timezonelbl',text: '{!JSENCODE($ObjectType.User.fields.TimeZoneSidKey.label)}', cls: 'clsLabel'});
		var Localelbl = new Ext.form.Label({id: 'Localelbl',text: '{!JSENCODE($ObjectType.User.fields.LocaleSidKey.label)}', cls: 'clsLabel'});
		var Languagelbl = new Ext.form.Label({id: 'Languagelbl',text: '{!JSENCODE($ObjectType.User.fields.LanguageLocaleKey.label)}', cls: 'clsLabel'});
		var EmailEncodelbl = new Ext.form.Label({id: 'EmailEncodelbl',text: '{!JSENCODE($ObjectType.User.fields.EmailEncodingKey.label)}', cls: 'clsLabel'});
		var TemporaryClientdataLabel = new Ext.form.Label({id: 'TemporaryClientdataLabel',text: '{!JSENCODE($Label.TemporaryClientdata)}', cls: 'clsInputBoldLabelTDI'});
		var lbldaccountName = '{!JSENCODE(daccountName)}';
		var lblUserSettingsTitle = '{!JSENCODE($Label.UserSettings)}';    
		var lblExtensionError = '{!JSENCODE($Label.ExtensionError)}';
		var lblInvalidDomainName = '{!JSENCODE($Label.InvalidDomainName)}';
		 
	    eval('{!ProfileList}');  
	    eval('{!TimeZoneList}');
	    eval('{!LanguageList}');
	    eval('{!EmailEncodeList}');
	    eval('{!LocaleList}'); 
	    
	    function getSDFStylesResPath(){
			var resPath = '{!$Resource.SDEFStyles}';
			return resPath;
		}
	</script>
	<apex:includeScript value="{!$Resource.BMCServiceDesk__ExtJS4_1_3}/ext-all.js" id="ext-all-js"/> 
	<script type="text/javascript" src="{!$Resource.SDEFCommonJS}/AdminUserSettings.js"/>
</apex:page>