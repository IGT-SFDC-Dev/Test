<apex:page showHeader="false" controller="BMCServiceDesk.BroadCastCloseController" standardStylesheets="false">
<c:CommonIncludes />
<style>
	.clsInputTextBox,
	.clsInputTextBoxReadOnly
	{
		*height:13px !important;
	}
</style>
    <script>
    var isUpdateable = {!isUpdateable};
    var insufficentPrivilegeMsg = '{!JSENCODE($Label.InsufficentPrivilegeToAccess)}';
    var standardLayout = '{!JSENCODE($CurrentPage.parameters.standardLayout)}';
    function getUrlParameter( param ){
        param = param.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");;
        var r1 = "[\\?&]"+param+"=([^&#]*)";
        var r2 = new RegExp( r1 );
        var r3 = r2.exec( window.location.href );
        if( r3 == null ){return ""}
        else {return r3[1]};
     }
     //Start Manasi
        if(getUrlParameter('stdForm')){
     
        document.title='{!JSENCODE($Label.CloseBroadcast)}';
        }
        Ext.onReady(function(){
         if (!isUpdateable) 
			Ext.MessageBox.show({ msg: insufficentPrivilegeMsg, buttons: Ext.MessageBox.OK});
         
         Ext.QuickTips.init();
         
         var isValid ='True';
         var isClosedByEmpty ='False';
         function isValidDate(){
            isValid ='True';
            var temp = document.getElementById('{!$Component.broadcastCloseForm.broadcastExpirationDate}').value;            
             /*   if(temp!=null && temp!=''){
                    var RegExPattern = /^(?=\d)(?:(?:(?:(?:(?:0?[13578]|1[02])(\/|-|\.)31)\1|(?:(?:0?[1,3-9]|1[0-2])(\/|-|\.)(?:29|30)\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})|(?:0?2(\/|-|\.)29\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))|(?:(?:0?[1-9])|(?:1[0-2]))(\/|-|\.)(?:0?[1-9]|1\d|2[0-8])\4(?:(?:1[6-9]|[2-9]\d)?\d{2}))($|\ (?=\d)))?(((0?[1-9]|1[012])(:[0-5]\d){0,2}(\ [AP]M))|([01]\d|2[0-3])(:[0-5]\d){1,2})?$/;
                    if (!(temp.match(RegExPattern))) {
                        isValid ='False';
                    } else {
                        isValid ='True';                    
                    }                    
                }*/
        } 
                
          // Function added by Manish Puri for bug 001700      
          function ClosedByEmpty(){
             isClosedByEmpty ='False';
             var chkClosedBy= document.getElementById('{!$Component.broadcastCloseForm.User_id_username}').value;              
                 if(chkClosedBy!=null && chkClosedBy!=''){ 
                        isClosedByEmpty ='False';
                    } else {
                         isClosedByEmpty ='True';
                    }
            } 
        var OkBtnHandler = function(button,event) { 
                           
                          ClosedByEmpty();
                          if(isClosedByEmpty=='False'){
                            closeBroadcast();
                           }else{
                           Ext.MessageBox.show({ msg: '{!JSENCODE($Label.CloseByEmpty)}', buttons: Ext.MessageBox.OK});
                           return;
                           }
                          
                           
                           isValidDate();
                          if(isValid=='True'){
                            //closeBroadcast();
                           }else{
                            Ext.MessageBox.show({ msg: '{!JSENCODE($Label.validDateTime)}', buttons: Ext.MessageBox.OK});
                           }
                  };
              
          var SamplePanel = Ext.extend(Ext.Panel, {
            renderTo: 'btnToolbar',
            defaults: {bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;'}
        });
        
        new SamplePanel({
            title: '',
            cls:'toolCloseCls',
        bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;',
            tbar: [{
                scale: 'medium',
                iconCls: 'bmcSave',
                tooltipType : 'title',
                 tooltip: '{!JSENCODE($Label.closeBroadcast)}',
                 disabled: !isUpdateable,
                handler:OkBtnHandler
            }]
        });
        //converdisabletoreadonly();
        converdisabledatetoreadonly();
        if(standardLayout != null && standardLayout !='true'){
        	document.getElementById('{!$Component.broadcastCloseForm.incidentResolution}').value = window.parent.getBroadcastResolutionValue();
        }
    });
    </script>
        
   <apex:outputPanel id="dummy"></apex:outputPanel>
    
    <apex:outputPanel > <!-- Page body in this panel -->
        <apex:messages />
            <apex:form onmouseover="diableCheckboxes();" id="broadcastCloseForm">
                <c:TabOutComponent /> 
                 <c:ValidationComponent errorMsgList="{!messageString}" id="validationComponent"></c:ValidationComponent>
                <script>
              
              window.onload = disableFDT;
              /*code added by karthik for Close broadcast for std broadcast custom buttons*/ 
               var stdFormValue=get_url_parameter('stdForm');
         	   var BroadcastId =get_url_parameter('broadcastId');
	           function get_url_parameter( param ){
			        param = param.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");;
			        var r1 = "[\\?&]"+param+"=([^&#]*)";
			        var r2 = new RegExp( r1 );
			        var r3 = r2.exec( window.location.href );
			        if( r3 == null ){return ""}
			        else {return r3[1]};
    			}   
    			/*end of the code*/  
                 function disableFDT(){
                    var browser=navigator.appName;
                    if(document.getElementById('{!$Component.followUpDateTime}') != null){
                        document.getElementById('{!$Component.followUpDateTime}').disabled = true;
                        if(browser == "Microsoft Internet Explorer"){
                                    document.getElementById('{!$Component.followUpDateTime}').style.backgroundColor = "#CCCCCC";
                        }
                    }
                    
                  }
              
              function diableCheckboxes(){
                 
                 if(document.getElementById('{!$Component.incidentResolution}').value == '')
                  {
                      var checkboxRes = getElementsByValue("isStdResolution", "input");         
                       checkboxRes[0].disabled = true;
                   }
                   if(document.getElementById('{!$Component.incidentDescription}').value == ''){
                       var checkboxDesc = getElementsByValue("isStdDescription", "input");         
                       checkboxDesc[0].disabled = true;
                   }
                   
              }
              
              function toggleFollowUpDateTime()
              {  
                  var browser=navigator.appName;
                  if(document.getElementById('{!$Component.followUp}').checked == true)
                  {
                       document.getElementById('{!$Component.followUpDateTime}').disabled = false;
                       if(browser == "Microsoft Internet Explorer"){
                        document.getElementById('{!$Component.followUpDateTime}').style.backgroundColor = "#FFFFFF";
                       }
                  }
                  else
                  {
                       document.getElementById('{!$Component.followUpDateTime}').value = "";
                       document.getElementById('{!$Component.followUpDateTime}').disabled = true;
                       if(browser == "Microsoft Internet Explorer"){
                            document.getElementById('{!$Component.followUpDateTime}').style.backgroundColor = "#CCCCCC";
                       }
                   }
                   
                   
              }
           
              
              function changeDescCheckboxStatus(){
                 
                  var checkboxDesc = getElementsByValue("isStdDescription", "input");
                  var checkboxRes = getElementsByValue("isStdResolution", "input");
                   
                   if(checkboxRes[0].checked && !checkboxDesc[0].checked) 
                           checkboxDesc[0].checked = true;
                   /*if(!checkboxDesc[0].checked && checkboxRes[0].checked){
                           checkboxDesc[0].checked = false; 
                           checkboxRes[0].checked = false;
                    }*/
                           
              }
              
             /* function openCategoryLookup(returnValues){      
                  if(returnValues!= null) {
                        if(returnValues[0] != null ||returnValues[0] !='')
                        {
                            setCategoryNext(returnValues[0]); //Calling Action Function
                        }
                    }
                }*/
                
   /*code added by karthik for  broadcast close  page functionality after  hiting on save button of popupwindow and while hiting the custom close button on standard layout*/       
			function closeRefresh(){
				window.opener.location.href="/{!JSENCODE($CurrentPage.parameters.broadcastId)}";
				self.close();
			}
			/*end of the code*/
              function closeAfterSave(){
                             if((error == null || error =='' || error == '{!JSENCODE($Label.SavedSuccessfully)}') && closeBroadcastPopUp == 'true'){
                              if(stdFormValue){   //
                       closeRefresh();
                    }
else{
                window.parent.handleResetChange();
                window.parent.handleElemEvent();
                  window.parent.saveBroadcastFrmCloseWin();
                  refreshPortletInfo();
                  window.parent.closePopup();
                  }
            }else  if((error != null && error !='')){   
                  window.parent.showMessage(error);
                  error=null;
                                     
            } 
          }
        
        
        
        function getElementsByValue(value, tag, node) {
              var values = new Array();
              if (tag == null)
                      tag = "*";
              if (node == null)
                      node = document;
              var search = node.getElementsByTagName(tag);
              var pat = new RegExp(value, "i");
              var i=0;
              /*for (var i=0; i<search.length; i++)*/
              while(i<search.length){
                      if (pat.test(search[i].value))
                          values.push(search[i]);
               i++;
              }
              
              return values;
          }
                
          function refreshPortletInfo(){
	          if(typeof(window.parent.parent.parent.refreshPortletByTitle) == 'function'){
				window.parent.parent.parent.refreshPortletByTitle('Broadcasts');
			  }
			  if(document.getElementById('{!$Component.closeBroadcasts}').checked){
			  	if(typeof(window.parent.parent.parent.refreshActionItemsPortlet) == 'function')
	                      	window.parent.parent.parent.refreshActionItemsPortlet('Action Items','INC');     
			  }
			  if(typeof(window.parent.parent.parent.refreshActionItemsPortlet) == 'function')
	                      	window.parent.parent.parent.refreshActionItemsPortlet('Action Items','BROAD');     
			  	
		  }
                
          
              
          </script>
          <apex:outputPanel id="errorPanel">
              <script>
                  var error= '{!JSENCODE(messageString)}'; 
                  var closeBroadcastPopUp = '{!closePopUp}';
              </script>
          
          </apex:outputPanel>
         
                 <!--apex:actionFunction id="setCategory" name="setCategory" action="{!setSelectedCategory}" reRender="catDesc" /-->
                <apex:actionFunction name="closeBroadcast" action="{!save}" rerender="errorPanel,validationComponent,brClosePanel" onComplete="closeAfterSave();converdisabledatetoreadonly();"/>
                <apex:actionFunction name="populateClosedBy" action="{!populateClosedBy}" rerender="User_id_username" > 
                    <apex:param assignTo="{!closedById}" name="closedById" value=""/>
                </apex:actionFunction>
                <apex:actionFunction name="populateClosedByNext" action="{!populateClosedByNext}" rerender="User_id_username" > 
                    <apex:param assignTo="{!closedById}" name="closedById" value=""/>
                </apex:actionFunction>
                
                <apex:actionFunction name="setCategoryNext" action="{!populateCategory}" rerender="Category__c_id_name,Category__c_id_categorydescription__c" > 
                    <apex:param assignTo="{!categoryId}" name="categoryId" value=""/>
                </apex:actionFunction>
                
                 <apex:actionFunction name="populateStatus" action="{!populateStatus}" rerender="Status__c_id_name" > 
                    <apex:param assignTo="{!statusId}" name="statusId" value=""/>
                </apex:actionFunction>
                
                
                
                
                <div id="capsule">
                   <table class="clsMainTable2" cellspacing="0" cellpadding="0">
                        <tr class="clsRowGreyBg">
                            <td>
                                <div id="btnToolbar"></div>
                                
                            </td>
                    
                          </tr>
                          
                        <tr>
                            <td>
                            	<apex:outputPanel id="brClosePanel">
                                <table class="clsTable" cellspacing="0" cellpadding="0"> 
                                    <tr>
                                        <td >
                                            <table  class="clsTable" cellspacing="0" cellpadding="0">
                                                <tr>
                                                <td colspan="3">
                                                    <div class="div15pxVspacing"></div>
                                                </td>
                                            </tr>
                                                <tr>
                                                   
                                                    <td class="clsInputLabelTD">{!$ObjectType.Broadcasts__c.fields.FkClosedBy__c.label}<span class="clsRequiredBlack">*</span></td>
                                                    <td class="clsInputTextBoxTD">
                                                        <!--apex:inputField value="{!broadcast.FKClosedBy__c}" styleClass="clstextbox" /-->
                                                        <apex:inputText title="{!$ObjectType.BMCServiceDesk__Broadcasts__c.fields.BMCServiceDesk__FKClosedBy__c.InlineHelpText}" id="User_id_username" value="{!closedBy}" styleClass="clsInputTextBox" onblur="showalldata(event,populateClosedByNext,escape('IsStaffUser__c=true'));"/>
                                                        </td>
                                                          <td class="lookupIconTD">
                                                          <div class="lookUpIconDiv">
                                                        <apex:commandbutton styleClass="lookupIconOn" onClick="if(!inProgress) {openPopupWithTitle('SearchPage?popupId=Client&isLookup=true&filterClause='+escape('IsStaffUser__c=true'),populateClosedBy,'',407,560);}" rerender="dummy"/>
                                                          </div>
                                                    </td>
                                               </tr>
                                                <tr>
                                                    <td class="clsInputLabelTD" >{!$ObjectType.Broadcasts__c.fields.closeDateTime__c.label}</td>
                                                    <td class="clsInputTextBoxTD">
                                                        <apex:inputText id="closedatefield" title="{!$ObjectType.BMCServiceDesk__Broadcasts__c.fields.BMCServiceDesk__closeDateTime__c.InlineHelpText}" value="{!closeDateTime}" styleClass="clsInputTextBoxReadOnly" disabled="true"/>
                                                    <script>
                                                        function converdisabledatetoreadonly()
                                                        {
                                                            document.getElementById('{!$Component.closedatefield}').disabled = false;
                                                            document.getElementById('{!$Component.closedatefield}').readOnly = true;
                                                        }
                                                    </script>
                                                    </td>
                                                </tr>
                                                

                                                <tr>
                                                    <td class="clsInputLabelTD" >{!$ObjectType.Broadcasts__c.fields.FkStatus__c.label}</td>
                                                    <td class="clsInputTextBoxTD">
                                                        <!--apex:inputField value="{!broadcast.FKStatus__r.Name}" styleClass="clstextbox" /-->
                                                    
                                                    <apex:inputText title="{!$Label.bmcservicedesk__Tooltip_Closeform_Status}" id="Status__c_id_name" value="{!statusName}" styleClass="clsInputTextBox" onblur="showalldata(event);"/>
                                                    </td>
                                                    <td class="lookupIconTD">
                                                    <div class="lookUpIconDiv">
                                                    <apex:commandbutton styleClass="lookupIconOn" onClick="if(!inProgress) {openPopupWithTitle('SearchPage?popupId=Status&isLookup=true&filterClause='+escape('state__c=false and appliesToBroadcasts__c = true and inactive__c = false'),populateStatus,'', 407, 560);}" rerender="dummy"/>
                                                    </div>  
                                                    </td>
                                                    
                                                </tr>
                                                <tr>
                                                    
                                                    <td class="clsInputLabelTD" >{!$ObjectType.Broadcasts__c.fields.expirationDate__c.label}</td>
                                                   <td class="clsInputTextBoxTD" title="{!$ObjectType.Broadcasts__c.fields.expirationDate__c.inlineHelpText}">
                                                     <apex:inputField value="{!broadcast.BMCServiceDesk__expirationDate__c}" id="broadcastExpirationDate" styleClass="clsInputTextBox" />
                                                    </td>                     
                                                </tr>
                                                
                                                <tr style="{!categoryShowStyle}">
                                                    <td class="clsInputLabelTD" ><apex:outputLabel value="{!$ObjectType.BMCServiceDesk__Broadcasts__c.fields.BMCServiceDesk__FKCategory__c.label}"/></td>
                                                    <td class="clsInputTextBoxTD">
                                                        <!--apex:inputField value="{!broadcast.FKCategory__r.Name}"  styleClass="clstextbox" /-->
                                                        <apex:inputText title="{!$Label.bmcservicedesk__Tooltip_Closeform_Category}" id="Category__c_id_name" value="{!categoryName}" styleClass="clsInputTextBox" onblur="showalldata(event);"/>
                                                        </td>
                                                        <td class="lookupIconTD"> <div class="lookUpIconDiv">
                                                        <apex:commandbutton styleClass="lookupIconOn" onClick="if(!inProgress) {openPopupWithTitle('SearchPage?popupId=Category&isLookup=true',setCategoryNext,'',407,560);}" rerender="Category__c_id_name,Category__c_id_categorydescription__c"/>
                                                        </div>
                                                             <!--  apex:inputhidden value="{!categoryName}" id="broadcastcategoryfk" /-->
                                                        </td>
                                                </tr>
												 </table>
                                            <table class="clsTable" cellspacing="0" cellpadding="0"> 
                                                <tr>
                                                   <td class="clsInputBoldLabelCloseTD">{!$ObjectType.Broadcasts__c.fields.broadcastResolution__c.label}</td>
                                                   </tr>
                                                   <tr>
                                                    <td class="clsInputTextAreaTD" >
                                                    <apex:inputtextarea title="{!$Label.bmcservicedesk__TooltipBroadCastCloseResolution}" id="incidentResolution" value="{!broadcast.BMCServiceDesk__broadcastResolution__c}" styleClass="clsInputTextAreaPgWoSidePanel"/>
                                                                        <apex:inputhidden id="incidentDescription" value="{!broadcast.BMCServiceDesk__broadcastDescription__c}"/>
                                                    </td>
                                                </tr>
                                                <tr>
                                                <td>
                                                    <div class="div11pxVspacing"></div>
                                                </td>
                                            </tr>

                                                <tr>
                                                     <td class="checkBox" colspan="2">
                                                         <apex:selectCheckboxes value="{!updateDescRes}" onclick="changeDescCheckboxStatus();" id="stdDescResChecks" layout="pageDirection" styleClass="checkLabel">
                                                             <apex:selectOptions value="{!updateList}" />
                                                         </apex:selectCheckboxes>
                                                     </td>
                                                </tr>
                                                <tr> 
                                                <td class="checkBoxL" colspan="2">
                                                                <apex:inputcheckbox title="{!$ObjectType.BMCServiceDesk__Broadcasts__c.fields.BMCServiceDesk__closeIncident__c.InlineHelpText}" id="closeBroadcasts" value="{!broadcast.BMCServiceDesk__closeIncident__c}" styleClass="clsCheckboxInc"/>
                                                                <apex:outputLabel styleClass="checkLabel" value="{!$ObjectType.BMCServiceDesk__Broadcasts__c.fields.BMCServiceDesk__closeIncident__c.label}"/>
                                                             </td>                                                    
                                               </tr>
                                        </table>
                                    </td>                                
                                </tr>
                            </table>
                            </apex:outputPanel>
                            </td>
                        </tr>
                    </table>
                </div>    
            </apex:form>
    </apex:outputPanel>  
</apex:page>