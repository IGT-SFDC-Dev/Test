<apex:component selfClosing="true" controller="BMCServiceDesk.ConsoleComponentController">
	<!--  Set the attribute name to that of the object being used. Example Incident__c / Task__c / etc -->
    <apex:attribute name="ConsoleObjectName" type="String" assignTo="{!ObjectName}" description="Object Name" required="true"/>
    <head>
	    <link rel="stylesheet" href="{!$Resource.ExtJS4_1_3}/resources/css/ext-all.css" type="text/css" />
	    <link rel="stylesheet" href="{!$Resource.SDEFStyles}/consolecomponent.css" type="text/css" />
    </head>
    <!--[if lt IE 9]>
	    <style>
	    	.bmcSearch  { filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='{!$Resource.SDEFStyles}/SDEFbuttons/b_search.png',sizingMethod='scale'); background-image: none !important; }
			.bmcRefresh { filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='{!$Resource.SDEFStyles}/SDEFbuttons/b_clear_search.png',sizingMethod='scale');background-image: none !important; }
	    </style>
    <![endif]-->
    
    <script type="text/javascript">
        /* Server Side Variables */
        _ServerLabels = {}
        
        _ServerLabels.New = "{!JSENCODE($Label.New)}";
		_ServerLabels.None1 = '{!JSENCODE($Label.None1)}';
        _ServerLabels.Delete = "{!JSENCODE($Label.Delete)}";
        _ServerLabels.RecordsPerPage = "{!JSENCODE($Label.Records_per_page)}";
        _ServerLabels.NoRecordFoundMsg = "{!JSENCODE($Label.MsgNoRecordFoundSearchPage)}";
        _ServerLabels.WaitMaskMsg = "{!JSENCODE($Label.SSLoading)}...";
        _ServerLabels.InsufficientSearchChars= "{!JSENCODE($Label.ValidateMinimumCharsCategorySearchPage)}";
        _ServerLabels.Search = "{!JSENCODE($Label.Search)}";
        _ServerLabels.Reset = "{!JSENCODE($Label.Clear)}";
        _ServerLabels.ChangeOwner = "{!JSENCODE($Label.ChangeOwner)}";
		_ServerLabels.PleaseWaitMsg = "{!JSENCODE($Label.PleaseWait)}...";
        _ServerLabels.Maximize = "{!JSENCODE($Label.TooltipMaximize)}";
        _ServerLabels.Restore = "{!JSENCODE($Label.TooltipRestore)}";
        _ServerLabels.MultipleDeleteConfirmMessage = "{!JSENCODE($Label.MultipleDeleteConfirmMessage)}";
        _ServerLabels.DeleteConfirmMessage = "{!JSENCODE($Label.DeleteConfirmMessage)}";
        _ServerLabels.Help = "{!JSENCODE($Label.TooltipHelp)}"
        _ServerLabels.ConsoleSelectView = "{!JSENCODE($Label.ConsoleSelectView)}"
        
        _ServerLabels.PageFirst = "{!JSENCODE($Label.FirstPage)}"
        _ServerLabels.PageNext = "{!JSENCODE($Label.Next)}"
        _ServerLabels.PageRefresh = "{!JSENCODE($Label.Refresh)}"
        _ServerLabels.PageLast = "{!JSENCODE($Label.LastPage)}"
        _ServerLabels.PagePrevious = "{!JSENCODE($Label.Previous)}"
        _ServerLabels.Page = "{!JSENCODE($Label.Page)}"
        _ServerLabels.Of = "{!JSENCODE($Label.Of)} {0}"

        var imageHelp='{!$Resource.SDEFStyles}';
        
        // Server variables to be rendered once. This is a json string and should not be escaped.
        var _ServerVariables = <apex:outputText value="{!ServerVariables}" escape="false"></apex:outputText> 

		var recordId = '{!record_id}'; // Existing record ID if passed in URL. example IncidentConsole?record_id=xxx or ?record_id=
		var broadcastPage = '{!$Page.BroadcastWidgetPage}';
		var broadcastLabel = '{!JSENCODE($Label.Navigator_Broadcasts)}';
		var broadcastIcon = '{!$Resource.SSThemes}/SSDefaultTheme/SDEFicons/ViewBroadcasts24.png';
		var isCloneRequest = '{!$CurrentPage.parameters.isCloneRequest}';
		var broadcastToolTip = '{!JSENCODE($Label.viewBroadcast)}';
		
		/* Define remoting action names below */
		/* Minimal code rendered here since this is not cached - Uses the remoting calls via JS */
        _RemotingActions={}
        
        _RemotingActions.GetPageRecords = "{!$RemoteAction.ConsoleComponentController.GetPageRecords}";
        _RemotingActions.DeleteRecords = "{!$RemoteAction.ConsoleComponentController.DeleteRecords}";
        _RemotingActions.broadcastMsgFunc = "{!$RemoteAction.ConsoleComponentController.broadcastMsgFunc}";
        _RemotingActions.ChangeOwner = "{!$RemoteAction.ConsoleComponentController.ChangeOwner}";
        
        var helpResource;
        userLanguage = '{!userLanguage}';
        if (userLanguage == 'ja'){
            helpResource = '{!$Resource.StdFormHelp_JA}';
        }else{
            helpResource = '{!$Resource.StdFormHelp}';
        }
        
        /* End of Server Side Variables */
    </script>
    
    <div id="console_content" style="width:100%;background-color:transparent;margin-left:5px"></div>
    
    <script src="{!$Resource.ExtJS4_1_3}/ext-all.js" type="text/javascript" />
    <script src="{!$Resource.SDEFCommonJS}/consolecomponent.js" type="text/javascript" />    
    
</apex:component>